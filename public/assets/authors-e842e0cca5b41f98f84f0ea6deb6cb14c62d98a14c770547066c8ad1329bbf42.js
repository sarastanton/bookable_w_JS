$(document).ready(function(){class t{constructor(){this.baseUrl="http://localhost:3000/authors"}getAuthors(){return fetch(`${this.baseUrl}.json`).then(t=>t.json())}createDBAuthor(t){const e={name:t};return fetch(`${this.baseUrl}.json`,{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({author:e})}).then(t=>t.json())}updateDBAuthor(t,e){const s={name:t};return fetch(`${this.baseUrl}/${e}`,{method:"PATCH",headers:{"content-type":"application/json"},body:JSON.stringify({author:s})}).then(t=>t.json())}deleteDBAuthor(t){return fetch(`${this.baseUrl}/${t}`,{method:"DELETE",headers:{"content-type":"application/json"}}).then(t=>t.json())}}class e{constructor(t){this.id=t.id,this.name=t.name,this.books=t.books,this.genres=t.genres}}class s{constructor(){this.adapter=new t,this.fetchAndLoadAuthors(),this.listeners(),this.authors=[],this.baseUrl="http://localhost:3000/authors"}fetchAndLoadAuthors(){this.adapter.getAuthors().then(t=>{t.forEach(t=>this.authors.push(new e(t)))}).then(()=>{this.renderAuthors()})}renderTr(t){return`<tr><td><a href="${this.baseUrl}/${t.id}">${t.name}</a></td>\n      <td><a href="" class="edit" data-id="${t.id}">edit</a>\n         |\n        <a href="" class="delete" data-id="${t.id}">delete</a></td>\n        <td>${t.books.length}</td>\n      </tr>`}renderAuthors(){const t=$("#authors_index_container"),e="<th>Author</th> <th>Options</th> <th>Number of Books</th>",s=this.authors.sort((t,e)=>t.name>e.name?1:e.name>t.name?-1:0).map(t=>this.renderTr(t)).join("");jQuery.parseHTML(e+s);t.empty(),t.html(e),t.append(s)}listeners(){$("#new_author").on("submit",this.createNewAuthor.bind(this)),$(document).on("click","a.edit:contains('edit')",this.makeEditable.bind(this)),$(document).on("click","a.delete:contains('delete')",this.deleteAuthor.bind(this)),$(document).on("click","a:contains('SAVE?')",this.updateAuthor.bind(this))}createNewAuthor(t){t.preventDefault();const s=$("#author_name").val();this.adapter.createDBAuthor(s).then(t=>{this.authors.push(new e(t)),$("#author_name").val(""),this.renderAuthors()})}makeEditable(t){t.preventDefault();this.authors.sort((t,e)=>t.id-e.id);const e=t.target.parentElement.parentElement.firstElementChild;t.target.innerHTML="SAVE?",e.contentEditable="true",e.classList.add("editable"),t.target.classList.add("save"),e.focus()}updateAuthor(){event.preventDefault();const t=event.target.parentElement.parentElement.children[0],s=t.innerText,n=event.target.dataset.id;t.contentEditable="false",t.classList.remove("editable"),event.target.classList.remove("save"),event.target.innerText="edit",this.adapter.updateDBAuthor(s,n).then(t=>{this.authors.push(new e(t))})}deleteAuthor(){event.preventDefault();const t=event.target.dataset.id;this.adapter.deleteDBAuthor(t).then(()=>{this.authors=[],this.fetchAndLoadAuthors()})}}new s});
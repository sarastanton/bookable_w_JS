$(document).ready(function(){class t{constructor(){this.baseUrl="http://localhost:3000/books"}getBooks(){return fetch(`${this.baseUrl}.json`).then(t=>t.json())}getReviews(t){return fetch(`${this.baseUrl}/${t}/reviews.json`).then(t=>t.json())}addToMyBooks(t){return fetch(`${this.baseUrl}/${t}/add_to_my_books.json`,{method:"PUT",headers:{"content-type":"application/json"}}).then(t=>console.log(t))}createDBBook(t,e,n,a){const s={title:t,author_name:e,genre_name:n,page_count:a};return fetch(`${this.baseUrl}.json`,{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({book:s})}).then(t=>t.json())}updateDBBook(t,e,n,a,s){const o={title:e,author_name:n,genre_name:a,page_count:s};return fetch(`${this.baseUrl}/${t}`,{method:"PATCH",headers:{"content-type":"application/json"},body:JSON.stringify({book:o})}).then(t=>t.json())}}class e{constructor(t){this.id=t.id,this.title=t.title,this.authorId=t.author_id,this.authorName=t.author.name,this.genreId=t.genre_id,this.genreName=t.genre.name,this.pageCount=t.page_count,this.ratings=t.ratings,this.reviews=t.reviews,this.users=t.users,this.userIds=[],this.avRating=t.average_rating,this.getUserIds()}getUserIds(){this.users.forEach(t=>this.userIds.push(t.id))}}class n{constructor(){this.adapter=new t,this.fetchAndLoadBooks(),this.listeners(),this.books=[],this.baseUrl="http://localhost:3000"}fetchAndLoadBooks(){this.adapter.getBooks().then(t=>{t.forEach(t=>this.books.push(new e(t)))}).then(()=>{this.renderBooks()})}renderTr(t){let e;const n=parseInt($(".login_status")[0].dataset.current_user);return e=t.userIds.includes(n)?`<a href="${this.baseUrl}/users/${n}"> In My Books </a>`:`<button type="button" class="add_to_my_books" data-book_id="${t.id}">Add to My Books</button>`,`<tr><td><a href="${this.baseUrl}/books/${t.id}">${t.title}</a></td>\n      <td><a href="${this.baseUrl}/authors/${t.authorId}">${t.authorName}</a></td>\n      <td><a href="${this.baseUrl}/genres/${t.genreId}">${t.genreName}</a></td>\n      <td>${t.pageCount}</td>\n      <td>${t.avRating}</td>\n      <td>${t.reviews.length}</td>\n      <td>${e}</td><td><a href="" class="edit" data-id="${t.id}">edit</a></td>\n      </tr>`}renderBooks(){const t=$("#books_index_container"),e="<th>Title</th> <th>Author</th> <th>Genre</th> <th>Page Count</th> <th>Average Rating</th> <th>Number of Reviews</th> <th>  </th>",n=this.books.sort((t,e)=>t.title>e.title?1:e.title>t.title?-1:0).map(t=>this.renderTr(t)).join("");jQuery.parseHTML(e+n);t.empty(),t.html(e),t.append(n)}listeners(){$("#new_book").on("submit",this.createNewBook.bind(this)),$(document).on("click",".add_to_my_books",this.addToMyBooks.bind(this)),$(document).on("click","a.edit:contains('edit')",this.makeEditable.bind(this)),$(document).on("click","a:contains('SAVE?')",this.updateBook.bind(this))}addToMyBooks(t){t.preventDefault;const e=parseInt($(".login_status")[0].dataset.current_user),n=document.createElement("a");this.adapter.addToMyBooks(t.target.dataset.book_id),n.setAttribute("href",`${this.baseUrl}/users/${e}`),n.innerHTML="In My Books",t.target.replaceWith(n)}createNewBook(t){t.preventDefault();const n=$("#book_title").val(),a=$("#book_author_name").val(),s=$("#book_genre_name").val(),o=$("#book_page_count").val();this.adapter.createDBBook(n,a,s,o).then(t=>{this.books.push(new e(t)),$("#book_title").val(""),$("#book_author_name").val(""),$("#book_genre_name").val(""),$("#book_page_count").val(""),this.renderBooks()})}makeEditable(t){t.preventDefault();const e=[t.target.parentElement.parentElement.children[0],t.target.parentElement.parentElement.children[1],t.target.parentElement.parentElement.children[2],t.target.parentElement.parentElement.children[3]];t.target.innerHTML="SAVE?",e.forEach(t=>t.classList.add("editable")),e.forEach(t=>t.setAttribute("contenteditable","true")),t.target.classList.add("save")}updateBook(t){t.preventDefault();const n=[t.target.parentElement.parentElement.children[0],t.target.parentElement.parentElement.children[1],t.target.parentElement.parentElement.children[2],t.target.parentElement.parentElement.children[3]],a=[t.target.dataset.id,n[0].innerText,n[1].innerText,n[2].innerText,n[3].innerText];n.forEach(t=>t.setAttribute("contenteditable","false")),n.forEach(t=>t.classList.remove("editable")),t.target.classList.remove("save"),t.target.innerText="edit",this.adapter.updateDBBook(...a).then(t=>{this.books.push(new e(t))})}}new n});